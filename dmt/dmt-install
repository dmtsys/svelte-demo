#!/bin/bash

SOURCE="$(cd "$(dirname "$1")"; pwd)/$(basename "$1")"

cd $SOURCE

# variables
app_base="$(node dmt/variables/app_base.cjs)"
build="$(node dmt/variables/build.cjs)"
hook="$(node dmt/variables/hook.cjs)"



source ~/.dmt/etc/.bash_aliases_bundle # dirsync

# sync
if [ $app_base = my-app-base ]; then

printf "${RED}Please open setting.json and change app_base to yours! "
echo ''
echo 'Not Successful'

else
    # before build scripts
    node dmt/editBase.cjs
    node dmt/editAppHtml.cjs

    # build
    npm run build

    # after build scripts
    # if [ -f dmt/editManifest.cjs ]; then node dmt/editManifest.cjs; fi
    node dmt/resetAppHtml.cjs
    node dmt/resetBase.cjs

    node dmt/fix-path.cjs


    # dmt apps dir
    DMT_APPS="$HOME/.dmt/user/apps"

    # DMT-APPS sync
    SOURCE_HOOK="${SOURCE}${hook}"
    SOURCE_PUBLIC="${SOURCE}${build}"


    # sync backend
    if [ -d $SOURCE_HOOK ]; then
    mkdir -p "$DMT_APPS/${app_base}"; cd $_

    dirsync --exclude node_modules "$SOURCE_HOOK" .

    cp "$SOURCE/dmt/variables/package.json" .

    echo "
    import { express  } from 'dmt/common';
    import { handler } from './handler';

    const app = express();

    export function init(program) {
    app.use(handler);
    return { express: app };
    }
    ">index.js
    
    if [ ! -L _dmt_deps ]; then
      ln -s ../_dmt_deps .
    fi

    npm install

    dmt restart

    fi

    printf "${GREEN}âœ“ Updated ~/.dmt/apps${NC}\n"

    cd $SOURCE

    # # if we wanted to sync the changes to server then uncomment below and change USERNAME & SERVER_IP
    # echo 'rsync server'
    # rsync -azP "$DMT_APPS/$app_base" "USERNAME@SERVER_IP:/home/USERNAME/.dmt/apps/user/$app_base"

fi
